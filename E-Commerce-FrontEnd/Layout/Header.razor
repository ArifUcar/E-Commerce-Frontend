@inject NavigationManager NavigationManager
@inject ICategoryService CategoryService
@inject IAuthService AuthService
@inject IProductService ProductService
@inject ICartService CartService
@inject IFavoriteService FavoriteService
@using E_Commerce_FrontEnd.Models
@using E_Commerce_FrontEnd.Services
@implements IDisposable

<header>
    <!-- Top Bar -->
    <div class="top-bar py-2 bg-primary text-white">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-6 text-center text-md-start">
                    <small>
                        <i class="bi bi-telephone me-2"></i> +90 (555) 123 45 67
                        <span class="mx-3">|</span>
                        <i class="bi bi-envelope me-2"></i> info@eticaret.com
                    </small>
                </div>
                <div class="col-md-6 text-center text-md-end">
                    <div class="top-nav">
                        <a href="#" class="text-white text-decoration-none me-3">
                            <small><i class="bi bi-truck me-1"></i> Sipariş Takip</small>
                        </a>
                        <a href="#" class="text-white text-decoration-none">
                            <small><i class="bi bi-geo-alt me-1"></i> Mağazalarımız</small>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Header -->
    <div class="main-header bg-white border-bottom shadow-sm">
        <div class="container">
            <!-- Logo ve Arama -->
            <div class="header-top py-3">
                <div class="row align-items-center">
                    <div class="col-lg-2">
                        <a class="navbar-brand d-flex align-items-center" href="">
                            <i class="bi bi-shop text-primary fs-2"></i>
                            <span class="fw-bold ms-2 fs-4">E-Ticaret</span>
                        </a>
                    </div>
                    <div class="col-lg-6">
                        <div class="search-box">
                            <div class="input-group">
                                <input type="text" 
                                       class="form-control" 
                                       placeholder="Ürün, kategori veya marka ara..."
                                       @bind="searchTerm"
                                       @bind:event="oninput"
                                       @onkeyup="HandleSearch">
                                <button class="btn btn-primary px-4" @onclick="PerformSearch">
                                    <i class="bi bi-search"></i>
                                </button>
                            </div>
                            @if (showSearchResults && searchResults != null && searchResults.Any())
                            {
                                <div class="search-results shadow-sm">
                                    @foreach (var product in searchResults.Take(5))
                                    {
                                        <div class="search-item" @onclick="() => NavigateToProduct(product.Id)">
                                            <div class="d-flex align-items-center p-2">
                                                <img src="@(string.IsNullOrEmpty(product.Base64Image) ? 
                                                    (string.IsNullOrEmpty(product.ImagePath) ? "images/no-image.jpg" : product.ImagePath) : 
                                                    $"data:image/jpeg;base64,{product.Base64Image}")" 
                                                     class="search-item-image" 
                                                     alt="@product.ProductName">
                                                <div class="ms-3">
                                                    <div class="fw-bold">@product.ProductName</div>
                                                    <div class="small text-muted">@product.CategoryName</div>
                                                    <div class="text-primary">@product.Price.ToString("N2") ₺</div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    @if (searchResults.Count > 5)
                                    {
                                        <div class="p-2 text-center">
                                            <button class="btn btn-link" @onclick="ShowAllResults">
                                                Tüm sonuçları gör (@searchResults.Count)
                                            </button>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="d-flex justify-content-end gap-3">
                            <a href="/favorites" class="btn btn-outline-primary position-relative">
                                <i class="bi bi-heart"></i>
                                @if (favoriteCount > 0)
                                {
                                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                        @favoriteCount
                                    </span>
                                }
                            </a>
                            
                            <a href="/cart" class="btn btn-outline-primary position-relative">
                                <i class="bi bi-cart3"></i>
                                @if (cartItemCount > 0)
                                {
                                    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                        @cartItemCount
                                    </span>
                                }
                            </a>
                            
                            @if (AuthService.IsAuthenticated)
                            {
                                <div class="dropdown">
                                    <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                        <i class="bi bi-person-circle me-1"></i>
                                        @($"{AuthService.CurrentUser?.FirstName} {AuthService.CurrentUser?.LastName}")
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-end border-0 shadow-sm">
                                        @if (AuthService.CurrentUser?.Roles?.Contains("Admin") == true)
                                        {
                                            <li>
                                                <a class="dropdown-item py-2 text-primary" href="/admin">
                                                    <i class="bi bi-speedometer2 me-2"></i>Yönetim Paneli
                                                </a>
                                            </li>
                                            <li><hr class="dropdown-divider"></li>
                                        }
                                        <li>
                                            <a class="dropdown-item py-2" href="/profile">
                                                <i class="bi bi-person me-2"></i>Profilim
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item py-2" href="/orders">
                                                <i class="bi bi-bag me-2"></i>Siparişlerim
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item py-2" href="/addresses">
                                                <i class="bi bi-geo-alt me-2"></i>Adreslerim
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item py-2" href="/favorites">
                                                <i class="bi bi-heart me-2"></i>Favorilerim
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item py-2" href="/settings">
                                                <i class="bi bi-gear me-2"></i>Ayarlar
                                            </a>
                                        </li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li>
                                            <button class="dropdown-item py-2 text-danger" @onclick="Logout">
                                                <i class="bi bi-box-arrow-right me-2"></i>Çıkış Yap
                                            </button>
                                        </li>
                                    </ul>
                                </div>
                            }
                            else
                            {
                                <a href="/login" class="btn btn-primary">
                                    <i class="bi bi-person me-1"></i>
                                    Giriş Yap
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Kategoriler -->
            <div class="header-bottom py-2 border-top">
                <div class="row">
                    <div class="col-12">
                        <ul class="nav category-nav">
                            <li class="nav-item">
                                <a class="nav-link" href="/">Ana Sayfa</a>
                            </li>
                            @if (categories != null && categories.Any())
                            {
                                @foreach (var category in categories.Where(c => !c.IsDeleted))
                                {
                                    <li class="nav-item">
                                        <a class="nav-link" href="/category/@category.Id">
                                            @category.CategoryName
                                        </a>
                                    </li>
                                }
                            }
                            <li class="nav-item">
                                <a class="nav-link text-primary" href="/categories">
                                    Tüm Kategoriler
                                </a>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>

<style>
    .top-bar {
        font-size: 0.9rem;
    }
    
    .main-header {
        position: sticky;
        top: 0;
        z-index: 1000;
        background: white;
    }

    .search-box .form-control {
        border-radius: 50rem;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        padding-left: 1.5rem;
    }

    .search-box .btn {
        border-radius: 50rem;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }

    .category-nav {
        overflow-x: auto;
        flex-wrap: nowrap;
        -webkit-overflow-scrolling: touch;
        scrollbar-width: none;
        -ms-overflow-style: none;
    }

    .category-nav::-webkit-scrollbar {
        display: none;
    }

    .category-nav .nav-link {
        white-space: nowrap;
        padding: 0.5rem 1rem;
        color: var(--bs-gray-700);
        font-weight: 500;
        transition: all 0.2s ease;
    }

    .category-nav .nav-link:hover {
        color: var(--bs-primary);
    }

    media (max-width: 991.98px) {
        .header-top .col-lg-4 {
            margin-top: 1rem;
        }
        
        .search-box {
            margin: 1rem 0;
        }
    }

    .search-results {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: white;
        border-radius: 0.5rem;
        border: 1px solid #dee2e6;
        z-index: 1000;
        max-height: 400px;
        overflow-y: auto;
    }

    .search-item {
        cursor: pointer;
        border-bottom: 1px solid #dee2e6;
    }

    .search-item:hover {
        background-color: #f8f9fa;
    }

    .search-item:last-child {
        border-bottom: none;
    }

    .search-item-image {
        width: 50px;
        height: 50px;
        object-fit: cover;
        border-radius: 0.25rem;
    }
</style>

@code {
    private List<Category> categories;
    private string searchTerm = "";
    private List<Product> searchResults;
    private bool showSearchResults = false;
    private Timer debounceTimer;
    private int cartItemCount = 0;
    private int favoriteCount = 0;

    protected override async Task OnInitializedAsync()
    {
        await LoadCategories();
        debounceTimer = new Timer(OnDebounceTimerElapsed, null, Timeout.Infinite, Timeout.Infinite);
        await UpdateCartCount();
        await UpdateFavoriteCount();
        
        // Event'leri dinle
        FavoriteService.OnChange += HandleFavoriteChange;
        CartService.OnChange += HandleCartChange;
        AuthService.OnAuthenticationChanged += StateHasChanged;
    }

    private async Task LoadCategories()
    {
        try
        {
            categories = await CategoryService.GetAllCategories();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Kategoriler yüklenirken hata oluştu: {ex.Message}");
            categories = new List<Category>();
        }
    }

    private void Logout()
    {
        AuthService.Logout();
        NavigationManager.NavigateTo("/");
    }

    private async Task HandleSearch(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await PerformSearch();
            return;
        }

        // Reset and start timer
        debounceTimer.Change(300, Timeout.Infinite);
    }

    private void OnDebounceTimerElapsed(object state)
    {
        InvokeAsync(async () =>
        {
            if (!string.IsNullOrWhiteSpace(searchTerm) && searchTerm.Length >= 2)
            {
                searchResults = await ProductService.SearchProducts(searchTerm);
                showSearchResults = true;
            }
            else
            {
                showSearchResults = false;
            }
            StateHasChanged();
        });
    }

    private async Task PerformSearch()
    {
        if (!string.IsNullOrWhiteSpace(searchTerm))
        {
            searchResults = await ProductService.SearchProducts(searchTerm);
            NavigateToSearchResults();
        }
    }

    private void NavigateToProduct(string productId)
    {
        showSearchResults = false;
        NavigationManager.NavigateTo($"/product/{productId}");
    }

    private void NavigateToSearchResults()
    {
        showSearchResults = false;
        NavigationManager.NavigateTo($"/search?q={Uri.EscapeDataString(searchTerm)}");
    }

    private void ShowAllResults()
    {
        NavigateToSearchResults();
    }

    private async Task UpdateCartCount()
    {
        await CartService.GetCartItems();
        cartItemCount = CartService.GetCartItemCount();
    }

    private async Task UpdateFavoriteCount()
    {
        await FavoriteService.GetFavorites();
        favoriteCount = FavoriteService.GetFavoriteCount();
    }

    private async void HandleFavoriteChange()
    {
        await UpdateFavoriteCount();
        StateHasChanged();
    }

    private async void HandleCartChange()
    {
        await UpdateCartCount();
        StateHasChanged();
    }

    public void Dispose()
    {
        FavoriteService.OnChange -= HandleFavoriteChange;
        CartService.OnChange -= HandleCartChange;
        AuthService.OnAuthenticationChanged -= StateHasChanged;
        debounceTimer?.Dispose();
    }
} 