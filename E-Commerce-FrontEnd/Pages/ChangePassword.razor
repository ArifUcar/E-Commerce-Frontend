@page "/change-password"
@using E_Commerce_FrontEnd.Models
@using E_Commerce_FrontEnd.Services
@using Microsoft.AspNetCore.Authorization
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@attribute [Authorize]

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white py-3">
                    <h4 class="mb-0">Şifre Değiştir</h4>
                </div>
                <div class="card-body p-4">
                    <EditForm Model="@model" OnValidSubmit="HandleSubmit">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label class="form-label">Mevcut Şifre</label>
                            <div class="input-group">
                                <input type="@(showCurrentPassword ? "text" : "password")" 
                                       class="form-control" 
                                       @bind="model.CurrentPassword" />
                                <button type="button" 
                                        class="btn btn-outline-secondary" 
                                        @onclick="() => showCurrentPassword = !showCurrentPassword">
                                    <i class="bi bi-@(showCurrentPassword ? "eye-slash" : "eye")"></i>
                                </button>
                            </div>
                            <ValidationMessage For="@(() => model.CurrentPassword)" class="text-danger small" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Yeni Şifre</label>
                            <div class="input-group">
                                <input type="@(showNewPassword ? "text" : "password")" 
                                       class="form-control" 
                                       @bind="model.NewPassword" />
                                <button type="button" 
                                        class="btn btn-outline-secondary" 
                                        @onclick="() => showNewPassword = !showNewPassword">
                                    <i class="bi bi-@(showNewPassword ? "eye-slash" : "eye")"></i>
                                </button>
                            </div>
                            <ValidationMessage For="@(() => model.NewPassword)" class="text-danger small" />
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Yeni Şifre (Tekrar)</label>
                            <div class="input-group">
                                <input type="@(showConfirmPassword ? "text" : "password")" 
                                       class="form-control" 
                                       @bind="model.ConfirmPassword" />
                                <button type="button" 
                                        class="btn btn-outline-secondary" 
                                        @onclick="() => showConfirmPassword = !showConfirmPassword">
                                    <i class="bi bi-@(showConfirmPassword ? "eye-slash" : "eye")"></i>
                                </button>
                            </div>
                            <ValidationMessage For="@(() => model.ConfirmPassword)" class="text-danger small" />
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-check-lg me-2"></i>Şifreyi Değiştir
                            </button>
                            <button type="button" class="btn btn-outline-secondary" @onclick="GoBack">
                                <i class="bi bi-arrow-left me-2"></i>Geri Dön
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private ChangePasswordModel model = new();
    private bool showCurrentPassword;
    private bool showNewPassword;
    private bool showConfirmPassword;

    private async Task HandleSubmit()
    {
        try
        {
            if (model.NewPassword != model.ConfirmPassword)
            {
                await JSRuntime.InvokeVoidAsync("alert", "Yeni şifreler eşleşmiyor!");
                return;
            }

            var result = await AuthService.ChangePassword(model);
            if (result)
            {
                await JSRuntime.InvokeVoidAsync("alert", "Şifreniz başarıyla değiştirildi!");
                NavigationManager.NavigateTo("/profile");
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("alert", "Şifre değiştirme işlemi başarısız oldu!");
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Bir hata oluştu: {ex.Message}");
        }
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/profile");
    }
} 