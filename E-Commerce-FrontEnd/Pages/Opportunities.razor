@page "/opportunities"
@using E_Commerce_FrontEnd.Models
@using E_Commerce_FrontEnd.Services
@inject IProductService ProductService
@inject NavigationManager NavigationManager

<div class="container py-4">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex align-items-center justify-content-between">
                <div>
                    <h1 class="h3 mb-1">İndirimli Ürünler</h1>
                    <p class="text-muted mb-0">
                        Toplam @(discountedProducts?.Count ?? 0) indirimli ürün bulundu
                    </p>
                </div>
            </div>
        </div>
    </div>

    <!-- İndirimli Ürünler Grid -->
    <div class="row g-4">
        @if (discountedProducts == null)
        {
            <div class="col-12">
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Yükleniyor...</span>
                    </div>
                </div>
            </div>
        }
        else if (!discountedProducts.Any())
        {
            <div class="col-12">
                <div class="alert alert-info">
                    Şu anda indirimli ürün bulunmamaktadır.
                </div>
            </div>
        }
        else
        {
            @foreach (var product in discountedProducts)
            {
                <div class="col-6 col-md-4 col-lg-3 mb-4">
                    <div class="card h-100 border-0 shadow-sm product-card">
                        <div class="position-relative">
                            <img src="@product.ImageUrl" 
                                 class="card-img-top" 
                                 alt="@product.ProductName">
                            <div class="position-absolute top-0 start-0 m-2">
                                <span class="badge bg-danger">%@product.DiscountRate İndirim</span>
                            </div>
                        </div>
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title product-title">@product.ProductName</h5>
                            <p class="card-text text-muted small mb-2">@product.Description</p>
                            <div class="mt-auto">
                                <div class="d-flex align-items-center gap-2">
                                    <span class="text-danger fw-bold">@($"{product.DiscountedPrice:N2}") ₺</span>
                                    <span class="text-decoration-line-through text-muted small">
                                        @($"{product.Price:N2}") ₺
                                    </span>
                                </div>
                            </div>
                            <div class="mt-2">
                                <span class="badge bg-@(product.StockQuantity > 10 ? "success" : "danger")">
                                    Stok: @product.StockQuantity
                                </span>
                            </div>
                        </div>
                        <div class="card-footer bg-white border-0">
                            <a href="/product/@product.Id" class="btn btn-primary w-100">
                                <i class="bi bi-eye me-2"></i>
                                Ürünü İncele
                            </a>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

<style>
    .product-card {
        transition: transform 0.2s ease;
    }

    .product-card:hover {
        transform: translateY(-5px);
    }

    .card-img-top {
        height: 200px;
        object-fit: cover;
    }

    .product-title {
        font-size: 1rem;
        font-weight: 500;
        margin-bottom: 0.5rem;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }

    .card-text {
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }
</style>

@code {
    private List<Product> discountedProducts;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var allProducts = await ProductService.GetAllProducts();
            discountedProducts = allProducts
                .Where(p => 
                    p.DiscountRate > 0 && 
                    p.DiscountStartDate <= DateTime.Now && 
                    p.DiscountEndDate >= DateTime.Now)
                .ToList();

            Console.WriteLine($"Toplam {discountedProducts.Count} indirimli ürün bulundu.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Hata: {ex.Message}");
            discountedProducts = new List<Product>();
        }
    }
} 