@page "/admin/products"
@layout E_Commerce_FrontEnd.Shared.AdminLayout
@inject IProductService ProductService
@inject ICategoryService CategoryService
@inject IJSRuntime JSRuntime
@using E_Commerce_FrontEnd.Models
@using E_Commerce_FrontEnd.Models.Commands
@using E_Commerce_FrontEnd.Services

<div class="d-flex justify-content-between align-items-center mb-4">
    <h4 class="mb-0">Ürün Yönetimi</h4>
    <button class="btn btn-primary" @onclick="() => ShowAddProductModal()">
        <i class="bi bi-plus"></i> Yeni Ürün Ekle
    </button>
</div>

@if (products == null)
{
    <div class="text-center p-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Yükleniyor...</span>
        </div>
    </div>
}
else if (!products.Any())
{
    <div class="alert alert-info">
        Henüz ürün bulunmamaktadır.
    </div>
}
else
{
    <div class="card border-0 shadow-sm">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Görsel</th>
                            <th>Ürün Adı</th>
                            <th>Kategori</th>
                            <th>Fiyat</th>
                            <th>Stok</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var product in products)
                        {
                            <tr>
                                <td>
                                    <img src="@(string.IsNullOrEmpty(product.Base64Image) ? 
                                        (string.IsNullOrEmpty(product.ImagePath) ? "images/no-image.jpg" : product.ImagePath) : 
                                        $"data:image/jpeg;base64,{product.Base64Image}")" 
                                    class="product-image" alt="@product.ProductName">
                                </td>
                                <td>@product.ProductName</td>
                                <td>@product.CategoryName</td>
                                <td>@product.Price.ToString("N2") ₺</td>
                                <td>
                                    <span class="badge bg-@(product.StockQuantity > 10 ? "success" : "danger")">
                                        @product.StockQuantity
                                    </span>
                                </td>
                                <td>
                                    <button class="btn btn-sm btn-primary me-2" @onclick="() => ShowEditProductModal(product)">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                    <button class="btn btn-sm btn-danger" @onclick="() => DeleteProduct(product.Id)">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

<!-- Ürün Ekleme/Düzenleme Modal -->
@if (showModal)
{
    <div class="modal fade show" style="display: block;" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@(isEditing ? "Ürün Düzenle" : "Yeni Ürün Ekle")</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@currentProduct" OnValidSubmit="HandleSubmit">
                        <DataAnnotationsValidator />

                        <div class="row">
                            <!-- Temel Bilgiler -->
                            <div class="col-md-6">
                                <h6 class="mb-3">Temel Bilgiler</h6>

                                <div class="mb-3">
                                    <label class="form-label">Ürün Adı</label>
                                    <InputText @bind-Value="currentProduct.ProductName" class="form-control" />
                                    <ValidationMessage For="@(() => currentProduct.ProductName)" />
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Açıklama</label>
                                    <InputTextArea @bind-Value="currentProduct.Description" class="form-control" rows="3" />
                                    <ValidationMessage For="@(() => currentProduct.Description)" />
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Kategori</label>
                                    <InputSelect @bind-Value="currentProduct.CategoryId" class="form-select">
                                        <option value="">Kategori Seçin</option>
                                        @if (categories != null)
                                        {
                                            @foreach (var category in categories)
                                            {
                                                <option value="@category.Id">@category.CategoryName</option>
                                            }
                                        }
                                    </InputSelect>
                                    <ValidationMessage For="@(() => currentProduct.CategoryId)" />
                                </div>

                                <div class="row">
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Fiyat</label>
                                            <InputNumber @bind-Value="currentProduct.Price" class="form-control" />
                                            <ValidationMessage For="@(() => currentProduct.Price)" />
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">İndirimli Fiyat</label>
                                            <InputNumber @bind-Value="currentProduct.DiscountedPrice" class="form-control" />
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">İndirim Oranı (%)</label>
                                            <InputNumber @bind-Value="currentProduct.DiscountRate" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">İndirim Başlangıç Tarihi</label>
                                            <InputDate @bind-Value="currentProduct.DiscountStartDate" class="form-control" />
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">İndirim Bitiş Tarihi</label>
                                            <InputDate @bind-Value="currentProduct.DiscountEndDate" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Stok Miktarı</label>
                                            <InputNumber @bind-Value="currentProduct.StockQuantity" class="form-control" />
                                            <ValidationMessage For="@(() => currentProduct.StockQuantity)" />
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Ürün Görseli</label>
                                    <InputFile OnChange="HandleFileSelected" class="form-control" accept="image/*" />
                                </div>

                                @if (!string.IsNullOrEmpty(currentProduct.Base64Image))
                                {
                                    <div class="mb-3">
                                        <img src="data:image/jpeg;base64,@currentProduct.Base64Image" 
                                        class="img-thumbnail" style="max-height: 200px;" />
                                    </div>
                                }
                            </div>

                            <!-- Detay Bilgileri -->
                            <div class="col-md-6">
                                <h6 class="mb-3">Detay Bilgileri</h6>

                                <div class="row">
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Renk</label>
                                            <InputText @bind-Value="currentProduct.ProductDetail.Color" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Boyut</label>
                                            <InputText @bind-Value="currentProduct.ProductDetail.Size" class="form-control" />
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Materyal</label>
                                            <InputText @bind-Value="currentProduct.ProductDetail.Material" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Marka</label>
                                            <InputText @bind-Value="currentProduct.ProductDetail.Brand" class="form-control" />
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Model</label>
                                            <InputText @bind-Value="currentProduct.ProductDetail.Model" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Garanti</label>
                                            <InputText @bind-Value="currentProduct.ProductDetail.Warranty" class="form-control" />
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Teknik Özellikler</label>
                                            <InputTextArea @bind-Value="currentProduct.ProductDetail.Specifications" class="form-control" rows="2" />
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Ek Bilgiler</label>
                                            <InputTextArea @bind-Value="currentProduct.ProductDetail.AdditionalInformation" class="form-control" rows="2" />
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Ağırlık</label>
                                            <InputNumber @bind-Value="currentProduct.ProductDetail.Weight" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Ağırlık Birimi</label>
                                            <InputText @bind-Value="currentProduct.ProductDetail.WeightUnit" class="form-control" />
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Boyutlar</label>
                                    <InputText @bind-Value="currentProduct.ProductDetail.Dimensions" class="form-control" />
                                </div>

                                <div class="row">
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Stok Kodu</label>
                                            <InputNumber @bind-Value="currentProduct.ProductDetail.StockCode" class="form-control" />
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="mb-3">
                                            <label class="form-label">Barkod</label>
                                            <InputText @bind-Value="currentProduct.ProductDetail.Barcode" class="form-control" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" @onclick="CloseModal">İptal</button>
                            <button type="submit" class="btn btn-primary">
                                @if (loading)
                                {
                                    <span class="spinner-border spinner-border-sm me-2"></span>
                                }
                                Kaydet
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

<style>
    .product-image {
    width: 50px;
    height: 50px;
    object-fit: cover;
    border-radius: 4px;
    }
</style>

@code {
    private List<Product> products;
    private List<Category> categories;
    private bool showModal;
    private bool loading;
    private CreateProductCommand currentProduct = new();
    private bool isEditing = false;
    private Guid selectedProductId;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        products = await ProductService.GetAllProducts();
        categories = await CategoryService.GetAllCategories();
    }

    private void ShowAddProductModal()
    {
        currentProduct = new CreateProductCommand
        {
            ProductDetail = new ProductDetailCommand()
        };
        isEditing = false;
        showModal = true;
    }

    private void ShowEditProductModal(Product product)
    {
        currentProduct = new CreateProductCommand
        {
            ProductName = product.ProductName,
            Description = product.Description,
            Price = product.Price,
            DiscountedPrice = product.DiscountedPrice,
            DiscountRate = product.DiscountRate,
            DiscountStartDate = product.DiscountStartDate,
            DiscountEndDate = product.DiscountEndDate,
            StockQuantity = product.StockQuantity,
            CategoryId = product.CategoryId,
            Base64Image = product.Base64Image,
            ProductDetail = new ProductDetailCommand
            {
                Color = product.ProductDetail?.Color,
                Size = product.ProductDetail?.Size,
                Material = product.ProductDetail?.Material,
                Brand = product.ProductDetail?.Brand,
                Model = product.ProductDetail?.Model,
                Warranty = product.ProductDetail?.Warranty,
                Specifications = product.ProductDetail?.Specifications,
                AdditionalInformation = product.ProductDetail?.AdditionalInformation,
                Weight = product.ProductDetail?.Weight,
                WeightUnit = product.ProductDetail?.WeightUnit,
                Dimensions = product.ProductDetail?.Dimensions,
                StockCode = product.ProductDetail?.StockCode,
                Barcode = product.ProductDetail?.Barcode
            }
        };
        selectedProductId = product.Id;
        isEditing = true;
        showModal = true;
    }

    private async Task HandleSubmit()
    {
        try 
        {
            loading = true;

            // API'nin beklediği formata uygun hale getir
            var productToSave = new CreateProductCommand
            {
                ProductName = currentProduct.ProductName,
                Description = currentProduct.Description,
                Price = currentProduct.Price,
                DiscountedPrice = currentProduct.DiscountedPrice,
                DiscountRate = currentProduct.DiscountRate,
                DiscountStartDate = currentProduct.DiscountStartDate,
                DiscountEndDate = currentProduct.DiscountEndDate,
                StockQuantity = currentProduct.StockQuantity,
                CategoryId = currentProduct.CategoryId,
                Base64Image = currentProduct.Base64Image,
                ProductDetail = currentProduct.ProductDetail
            };

            bool success;
            if (isEditing)
            {
                success = await ProductService.UpdateProduct(selectedProductId, productToSave);
            }
            else
            {
                success = await ProductService.AddProduct(productToSave);
            }

            if (success)
            {
                await LoadData();
                CloseModal();
                await JSRuntime.InvokeVoidAsync("alert", 
                    isEditing ? "Ürün başarıyla güncellendi!" : "Ürün başarıyla eklendi!");
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("alert", "Bir hata oluştu!");
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Hata: {ex.Message}");
        }
        finally
        {
            loading = false;
        }
    }

    private async Task DeleteProduct(Guid id)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", "Bu ürünü silmek istediğinize emin misiniz?"))
        {
            try
            {
                var success = await ProductService.DeleteProduct(id);
                if (success)
                {
                    await LoadData();
                    await JSRuntime.InvokeVoidAsync("alert", "Ürün başarıyla silindi.");
                }
                else
                {
                    await JSRuntime.InvokeVoidAsync("alert", "Ürün silinirken bir hata oluştu!");
                }
            }
            catch (Exception ex)
            {
                await JSRuntime.InvokeVoidAsync("alert", $"Hata: {ex.Message}");
            }
        }
    }

    private void CloseModal()
    {
        showModal = false;
        currentProduct = new CreateProductCommand
            {
                ProductDetail = new ProductDetailCommand()
            };
        isEditing = false;
        selectedProductId = Guid.Empty;
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            var buffer = new byte[file.Size];
            await file.OpenReadStream().ReadAsync(buffer);
            currentProduct.Base64Image = Convert.ToBase64String(buffer);
        }
    }
} 