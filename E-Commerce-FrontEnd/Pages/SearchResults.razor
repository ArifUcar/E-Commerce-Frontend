@page "/search"
@using E_Commerce_FrontEnd.Models
@using E_Commerce_FrontEnd.Services
@inject IProductService ProductService
@inject NavigationManager NavigationManager
@inject ICartService CartService

<div class="container py-5">
    <div class="row mb-4">
        <div class="col">
            <h2 class="display-6 fw-bold">Arama Sonuçları</h2>
            <p class="text-muted">
                "@searchTerm" için @(products?.Count ?? 0) sonuç bulundu
            </p>
        </div>
    </div>

    @if (products == null)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Yükleniyor...</span>
            </div>
        </div>
    }
    else if (!products.Any())
    {
        <div class="alert alert-info">
            Aramanızla eşleşen ürün bulunamadı.
        </div>
    }
    else
    {
        <div class="row g-4">
            @foreach (var product in products)
            {
                <div class="col-12 col-sm-6 col-md-4 col-lg-3">
                    <div class="card h-100 border-0 shadow-sm">
                        <img src="@(string.IsNullOrEmpty(product.Base64Image) ? 
                            (string.IsNullOrEmpty(product.ImagePath) ? "images/no-image.jpg" : product.ImagePath) : 
                            $"data:image/jpeg;base64,{product.Base64Image}")" 
                             class="card-img-top product-image" 
                             alt="@product.ProductName">
                        
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title mb-2">@product.ProductName</h5>
                            <p class="card-text text-muted mb-2">@product.Description</p>
                            <div class="mt-auto">
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="text-primary fw-bold">@product.Price.ToString("N2") ₺</span>
                                    <button class="btn btn-primary btn-sm" @onclick="() => AddToCart(product)">
                                        <i class="bi bi-cart-plus me-1"></i>Sepete Ekle
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private string searchTerm;
    private List<Product> products;

    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(NavigationManager.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        searchTerm = query["q"] ?? "";

        if (!string.IsNullOrWhiteSpace(searchTerm))
        {
            await Search();
        }
    }

    private async Task Search()
    {
        try
        {
            products = await ProductService.SearchProducts(searchTerm);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Arama yapılırken hata oluştu: {ex.Message}");
            products = new List<Product>();
        }
    }

    private async Task AddToCart(Product product)
    {
        try
        {
            await CartService.AddToCart(product);
            // İsteğe bağlı: Başarılı mesajı göster
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ürün sepete eklenirken hata oluştu: {ex.Message}");
            // İsteğe bağlı: Hata mesajı göster
        }
    }
} 