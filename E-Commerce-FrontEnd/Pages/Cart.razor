@page "/cart"
@using E_Commerce_FrontEnd.Models
@using E_Commerce_FrontEnd.Services
@inject ICartService CartService
@inject NavigationManager NavigationManager

<div class="container py-5">
    <div class="row">
        <div class="col-12">
            <h2 class="display-6 fw-bold mb-4">Alışveriş Sepetim</h2>
        </div>
    </div>

    @if (cartItems == null)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Yükleniyor...</span>
            </div>
        </div>
    }
    else if (!cartItems.Any())
    {
        <div class="text-center py-5">
            <i class="bi bi-cart-x text-muted display-1"></i>
            <h4 class="mt-3">Sepetiniz Boş</h4>
            <p class="text-muted">Sepetinizde henüz ürün bulunmamaktadır.</p>
            <a href="/" class="btn btn-primary">
                <i class="bi bi-arrow-left me-2"></i>Alışverişe Devam Et
            </a>
        </div>
    }
    else
    {
        <div class="row g-4">
            <!-- Sepet Ürünleri -->
            <div class="col-lg-8">
                <div class="card border-0 shadow-sm">
                    <div class="card-body">
                        @foreach (var item in cartItems)
                        {
                            <div class="cart-item d-flex align-items-center py-3 @(cartItems.Last() != item ? "border-bottom" : "")">
                                <img src="@item.ImageUrl" 
                                     class="cart-item-image rounded" 
                                     alt="@item.ProductName">
                                
                                <div class="ms-3 flex-grow-1">
                                    <h5 class="mb-1">@item.ProductName</h5>
                                    <div class="d-flex align-items-center">
                                        <div class="input-group input-group-sm quantity-control me-3" style="width: 120px;">
                                            <button class="btn btn-outline-secondary" type="button" @onclick="() => UpdateQuantity(item.Id, item.Quantity - 1)">
                                                <i class="bi bi-dash"></i>
                                            </button>
                                            <input type="number" class="form-control text-center" value="@item.Quantity" 
                                                   @onchange="@(e => UpdateQuantity(item.Id, int.Parse(e.Value.ToString())))">
                                            <button class="btn btn-outline-secondary" type="button" @onclick="() => UpdateQuantity(item.Id, item.Quantity + 1)">
                                                <i class="bi bi-plus"></i>
                                            </button>
                                        </div>
                                        <div class="text-primary fw-bold">@item.TotalPrice.ToString("N2") ₺</div>
                                    </div>
                                </div>

                                <button class="btn btn-link text-danger ms-3" @onclick="() => RemoveFromCart(item.Id)">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Sipariş Özeti -->
            <div class="col-lg-4">
                <div class="card border-0 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title mb-4">Sipariş Özeti</h5>
                        
                        <div class="d-flex justify-content-between mb-2">
                            <span>Ara Toplam</span>
                            <span class="fw-bold">@CartService.GetCartTotal().ToString("N2") ₺</span>
                        </div>
                        
                        <div class="d-flex justify-content-between mb-2">
                            <span>Kargo</span>
                            <span class="fw-bold text-success">Ücretsiz</span>
                        </div>
                        
                        <hr>
                        
                        <div class="d-flex justify-content-between mb-4">
                            <span class="fw-bold">Toplam</span>
                            <span class="fw-bold text-primary fs-5">@CartService.GetCartTotal().ToString("N2") ₺</span>
                        </div>

                        <button class="btn btn-primary w-100 mb-3" @onclick="Checkout">
                            <i class="bi bi-credit-card me-2"></i>Ödemeye Geç
                        </button>

                        <a href="/" class="btn btn-outline-primary w-100">
                            <i class="bi bi-arrow-left me-2"></i>Alışverişe Devam Et
                        </a>
                    </div>
                </div>

                <!-- Kupon Kodu -->
                <div class="card border-0 shadow-sm mt-4">
                    <div class="card-body">
                        <h5 class="card-title mb-3">Kupon Kodu</h5>
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Kupon kodunuz...">
                            <button class="btn btn-outline-primary">Uygula</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .cart-item-image {
        width: 100px;
        height: 100px;
        object-fit: cover;
    }

    .quantity-control input[type="number"]::-webkit-inner-spin-button,
    .quantity-control input[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    .quantity-control input[type="number"] {
        -moz-appearance: textfield;
    }
</style>

@code {
    private List<CartItem> cartItems;

    protected override async Task OnInitializedAsync()
    {
        await LoadCart();
        CartService.OnChange += StateHasChanged;
    }

    private async Task LoadCart()
    {
        cartItems = await CartService.GetCartItems();
    }

    private async Task UpdateQuantity(string itemId, int quantity)
    {
        if (quantity >= 0)
        {
            await CartService.UpdateQuantity(itemId, quantity);
            await LoadCart();
        }
    }

    private async Task RemoveFromCart(string itemId)
    {
        await CartService.RemoveFromCart(itemId);
        await LoadCart();
    }

    private void Checkout()
    {
        NavigationManager.NavigateTo("/checkout");
    }

    public void Dispose()
    {
        CartService.OnChange -= StateHasChanged;
    }
} 