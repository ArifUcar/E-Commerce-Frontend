@page "/login"
@using E_Commerce_FrontEnd.Models
@using E_Commerce_FrontEnd.Services
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<div class="container">
    <div class="row justify-content-center min-vh-100 align-items-center">
        <div class="col-12 col-sm-8 col-md-6 col-lg-4">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    <div class="text-center mb-4">
                        <i class="bi bi-person-circle text-primary display-1"></i>
                        <h4 class="mt-3">Giriş Yap</h4>
                        <p class="text-muted">Hesabınıza giriş yapın</p>
                    </div>

                    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />

                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-danger">
                                @errorMessage
                            </div>
                        }

                        <div class="mb-3">
                            <label class="form-label">E-posta</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="bi bi-envelope"></i>
                                </span>
                                <InputText @bind-Value="loginModel.Email" class="form-control" placeholder="ornek@email.com" />
                            </div>
                            <ValidationMessage For="@(() => loginModel.Email)" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Şifre</label>
                            <div class="input-group">
                                <span class="input-group-text">
                                    <i class="bi bi-lock"></i>
                                </span>
                                <InputText type="password" @bind-Value="loginModel.Password" class="form-control" placeholder="••••••••" />
                            </div>
                            <ValidationMessage For="@(() => loginModel.Password)" />
                        </div>

                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" id="remember">
                                <label class="form-check-label" for="remember">Beni Hatırla</label>
                            </div>
                            <a href="/forgot-password" class="text-primary text-decoration-none">Şifremi Unuttum</a>
                        </div>

                        <button type="submit" class="btn btn-primary w-100" disabled="@isLoading">
                            @if (isLoading)
                            {
                                <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                <span>Giriş Yapılıyor...</span>
                            }
                            else
                            {
                                <span>Giriş Yap</span>
                            }
                        </button>
                    </EditForm>

                    <div class="text-center mt-4">
                        <span class="text-muted">Hesabınız yok mu?</span>
                        <a href="/register" class="text-primary text-decoration-none ms-2">Kayıt Ol</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage;
    private bool isLoading;

    private async Task HandleLogin()
    {
        try
        {
            isLoading = true;
            errorMessage = null;

            var result = await AuthService.Login(loginModel);

            if (result)
            {
                if (AuthService.CurrentUser?.Roles?.Contains("Admin") == true)
                {
                    NavigationManager.NavigateTo("/admin");
                }
                else
                {
                    NavigationManager.NavigateTo("/");
                }
            }
            else
            {
                errorMessage = "E-posta veya şifre hatalı!";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Bir hata oluştu. Lütfen tekrar deneyin.";
            Console.WriteLine($"Login error: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
} 